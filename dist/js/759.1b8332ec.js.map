{"version":3,"file":"js/759.1b8332ec.js","mappings":"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","sources":["webpack://cloud-music/./src/views/pc/10.artist.vue","webpack://cloud-music/src/views/pc/10.artist.vue","webpack://cloud-music/./src/views/pc/10.artist.vue?2870","webpack://cloud-music/./src/views/pc/10.artist.vue?64c3"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"artist-container\"},[_c('div',{staticClass:\"artist-wrap\"},[_c('div',{staticClass:\"img-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.artistData.img1v1Url),expression:\"artistData.img1v1Url\"}],attrs:{\"alt\":\"\"}})]),_c('div',{staticClass:\"artist-info\"},[_c('div',{staticClass:\"author-wrap\"},[_c('h2',[_vm._v(_vm._s(_vm.artistData.name))]),_c('div',{staticClass:\"alias-wrap\"},_vm._l((_vm.alias),function(item,index){return _c('span',{key:index},[_vm._v(_vm._s(item))])}),0)]),_c('div',{staticClass:\"creation-wrap\"},[_c('span',[_vm._v(\"单曲数:\"+_vm._s(_vm.artistData.musicSize))]),_c('span',[_vm._v(\"专辑数:\"+_vm._s(_vm.artistData.albumSize))]),_c('span',[_vm._v(\"MV数:\"+_vm._s(_vm.artistData.mvSize))])]),_c('div',{staticClass:\"desc-wrap\"},[_c('p',[_vm._v(\"简介:\"+_vm._s(_vm.artistData.briefDesc))])])])]),_c('el-tabs',{model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"热门歌曲\",\"name\":\"hotsongs\"}},[_c('table',{staticClass:\"el-table\"},[_c('thead',[_c('th'),_c('th',[_vm._v(\"音乐标题\")]),_c('th',[_vm._v(\"歌手\")]),_c('th',[_vm._v(\"专辑\")]),_c('th',[_vm._v(\"时长\")])]),_c('tbody',_vm._l((_vm.hotSongs),function(item,index){return _c('tr',{key:index,staticClass:\"el-table__row\",on:{\"dblclick\":function($event){return _vm.PlayMusic(item)}}},[_c('td',[_vm._v(_vm._s(index+1))]),_c('td',[_c('div',{staticClass:\"song-wrap\"},[_c('div',{staticClass:\"name-wrap\"},[_c('div',{staticClass:\"first-title\"},[_vm._v(_vm._s(item.name)),(item.mvid != 0)?_c('span',{staticClass:\"iconfont icon-mv\"}):_vm._e()]),(item.alia.length != 0)?_c('div',{staticClass:\"second-title\"},[_vm._v(_vm._s(item.alia[0]))]):_vm._e()])])]),_c('td',[_vm._v(_vm._s(item.ar[0].name))]),_c('td',[_vm._v(_vm._s(item.al.name))]),_c('td',[_vm._v(_vm._s(_vm._f(\"formatDuration\")(item.dt)))])])}),0)])])],1),_c('div',{staticClass:\"empty-wrap\"})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"artist-container\">\r\n      <!-- 歌手介绍部分 -->\r\n      <div class=\"artist-wrap\">\r\n          <div class=\"img-wrap\">\r\n              <!-- 歌手封面 -->\r\n              <img v-lazy=\"artistData.img1v1Url\" alt=\"\">\r\n          </div>\r\n          <!-- 歌手信息 -->\r\n          <div class=\"artist-info\">\r\n                <!-- 名字 -->\r\n                <div class=\"author-wrap\">\r\n                    <h2>{{artistData.name}}</h2>\r\n                    <!-- 英文名 -->\r\n                    <div class=\"alias-wrap\" >\r\n                        <span v-for=\"(item, index) in alias\" :key=\"index\" >{{item}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"creation-wrap\">\r\n                    <span>单曲数:{{artistData.musicSize}}</span>\r\n                    <span>专辑数:{{artistData.albumSize}}</span>\r\n                    <span>MV数:{{artistData.mvSize}}</span>\r\n                </div>\r\n                <div class=\"desc-wrap\">\r\n                    <p>简介:{{artistData.briefDesc}}</p>\r\n                </div>\r\n          </div>\r\n      </div>\r\n        <!-- 歌手的部分热门歌曲 -->\r\n        <el-tabs v-model=\"activeName\">\r\n          <el-tab-pane label=\"热门歌曲\" name=\"hotsongs\">\r\n              <table class=\"el-table\">\r\n                  <!-- 这里是表头  -->\r\n                    <thead>\r\n                        <!-- 表头单元格 -->\r\n                        <th></th>\r\n                        <th>音乐标题</th>\r\n                        <th>歌手</th>\r\n                        <th>专辑</th>\r\n                        <th>时长</th>\r\n                    </thead>\r\n                    <!-- 表身体部分，tr表示HTML表格中的一行。 -->    \r\n                    <tbody>\r\n                        <tr v-for=\"(item, index) in hotSongs\" :key=\"index\" class=\"el-table__row\"\r\n                            @dblclick=\"PlayMusic(item)\">\r\n                            <td>{{index+1}}</td>\r\n                            <td>\r\n                                <div class=\"song-wrap\">\r\n                                    <div class=\"name-wrap\">\r\n                                    <!-- 歌名 / mv图标 -->\r\n                                    <div class=\"first-title\">{{item.name}}<span v-if=\"item.mvid != 0\" class=\"iconfont icon-mv\" ></span></div>\r\n                                    <!-- 二级标题 -->\r\n                                    <div v-if=\"item.alia.length != 0\" class=\"second-title\">{{ item.alia[0] }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <!-- 歌手 -->\r\n                            <td>{{ item.ar[0].name }}</td>\r\n                            <!-- 专辑名 -->\r\n                            <td>{{ item.al.name }}</td>\r\n                            <!-- 时长 -->\r\n                            <td>{{ item.dt | formatDuration }}</td>\r\n                        </tr>\r\n                    </tbody>\r\n              </table>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n        \r\n        <div class=\"empty-wrap\">\r\n\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { singerSongsAPI } from '@/utils/api'\r\nimport { checkMusic,getSongUrl,getEverySongDetail } from '@/utils/playmusic'\r\nimport { mapActions, mapState } from 'vuex' \r\nexport default {\r\n    name : 'artist',\r\n    data() {\r\n        return {\r\n            activeName : 'hotsongs',\r\n            // 歌手id\r\n            artistId : this.$route.query.q,\r\n            // 获取数量\r\n            limit : 50,\r\n            // 页数\r\n            page : 1,\r\n            // 歌手数据列表\r\n            artistData : {},\r\n            // 英文名\r\n            alias : [],\r\n            // 歌手热门单曲\r\n            hotSongs : [],\r\n        }\r\n    },\r\n    created() {\r\n        // 开局直接调用\r\n        this.getSingerSongs()\r\n    },\r\n    // vue-router 同一个页面地址栏参数改变，页面不刷新的问题\r\n    watch: {\r\n      '$route' (to, from) {\r\n        this.search(this.$route.query.q)\r\n      }\r\n    },\r\n\r\n    methods: {\r\n\r\n        // 歌手单曲\r\n        getSingerSongs(){\r\n            let id = this.artistId\r\n            singerSongsAPI({id}).then(res => {\r\n                // console.log('歌手单曲',res)\r\n                // 赋值歌手数据\r\n                this.artistData = res.data.artist\r\n                if(res.data.artist.alias.length !=0){\r\n                    // 赋值英语名字\r\n                    this.alias = res.data.artist.alias\r\n                }\r\n                // 赋值歌手热门歌曲数据\r\n                this.hotSongs = res.data.hotSongs\r\n            })\r\n        },\r\n\r\n        //播放音乐\r\n\t\tPlayMusic(song) {\r\n\t\t\t// 先检查歌曲是否可用\r\n\t\t\tcheckMusic(song.id)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\t// 获取歌曲url\r\n\t\t\t\t\tgetSongUrl(song.id).then(res => {\r\n\t\t\t\t\t\tthis.$store.dispatch(\"saveSongUrl\", res.data.data[0].url);\r\n\t\t\t\t\t});\r\n          getEverySongDetail(song.id).then(res =>{\r\n            console.log('detail',res)\r\n            // 更新播放状态\r\n\t\t\t\t\t  this.$store.dispatch(\"changePlayState\", true);\r\n\t\t\t\t\t  //提交vuex保存当前歌曲详情\r\n\t\t\t\t\t  this.$store.dispatch(\"saveSongDetail\", res.data.songs[0]);\r\n\t\t\t\t\t  // 提交vuex添加到播放列表\r\n\t\t\t\t\t  this.$store.dispatch(\"addPlayinglist\", res.data.songs[0]);\r\n            // console.log('nowSongDetail',this.nowSongDetail)\r\n          })\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {\r\n          console.log(err);\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\tmessage: \"暂时无法播放，换首试试\",\r\n\t\t\t\t\t\ttype: \"warning\",\r\n\t\t\t\t\t\tcenter: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t},\r\n    },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./10.artist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./10.artist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./10.artist.vue?vue&type=template&id=0596be9c&\"\nimport script from \"./10.artist.vue?vue&type=script&lang=js&\"\nexport * from \"./10.artist.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","artistData","img1v1Url","expression","attrs","_v","_s","_l","alias","item","index","key","musicSize","albumSize","mvSize","briefDesc","model","activeName","callback","$$v","hotSongs","on","$event","PlayMusic","mvid","_e","alia","length","ar","al","_f","dt","staticRenderFns","data","artistId","limit","page","created","watch","methods","getSingerSongs","singerSongsAPI","id","checkMusic","then","res","getSongUrl","getEverySongDetail","console","catch","err","message","type","center","component"],"sourceRoot":""}