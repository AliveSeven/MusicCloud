{"version":3,"file":"js/847.22368248.js","mappings":"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","sources":["webpack://cloud-music/./src/views/pc/07.mv.vue","webpack://cloud-music/src/views/pc/07.mv.vue","webpack://cloud-music/./src/views/pc/07.mv.vue?f8e8","webpack://cloud-music/./src/views/pc/07.mv.vue?a13c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"mv-container\"},[_c('div',{staticClass:\"mv-wrap\"},[_c('h3',[_vm._v(\"MV详情\")]),_c('div',{staticClass:\"video-wrap\"},[_c('video',{attrs:{\"controls\":\"\",\"src\":_vm.mvUrl}},[_vm._v(\" 抱歉，您的浏览器不支持内嵌视频，不过不用担心，你可以 \"),_c('a',{attrs:{\"href\":\"https://www.baidu.com\"}},[_vm._v(\"下载\")]),_vm._v(\" 并用你喜欢的播放器观看! \")])]),_c('div',{staticClass:\"info-wrap\"},[_c('div',{staticClass:\"singer-info\"},[_c('div',{staticClass:\"avatar-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(_vm.artistAvatarUrl),expression:\"artistAvatarUrl\"}],attrs:{\"alt\":\"\"}})]),_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.mvInfo.artistName))])]),_c('div',{staticClass:\"mv-info\"},[_c('h2',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.mvInfo.name))]),_c('span',{staticClass:\"date\"},[_vm._v(\"发布：\"+_vm._s(_vm.mvInfo.publishTime))]),_c('span',{staticClass:\"number\"},[_vm._v(\"播放：\"+_vm._s(_vm.mvInfo.playCount)+\" 次\")]),_c('p',{staticClass:\"desc\"},[_vm._v(_vm._s(_vm.mvInfo.desc))])])]),(_vm.hotComments.length != 0)?_c('div',{staticClass:\"comment-wrap\"},[_c('p',{staticClass:\"title\"},[_vm._v(\" 热门评论\"),_c('span',{staticClass:\"number\"},[_vm._v(\"(\"+_vm._s(_vm.hotComments.length)+\") \")])]),_c('div',{staticClass:\"comments-wrap\"},_vm._l((_vm.hotComments),function(item,index){return _c('div',{key:index,staticClass:\"item\"},[_c('div',{staticClass:\"icon-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item.user.avatarUrl),expression:\"item.user.avatarUrl\"}],attrs:{\"alt\":\"\"}})]),_c('div',{staticClass:\"content-wrap\"},[_c('div',{staticClass:\"content\"},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(item.user.nickname)+\"：\")]),_c('span',{staticClass:\"comment\"},[_vm._v(_vm._s(item.content))])]),(item.beReplied.length != 0)?_c('div',{staticClass:\"re-content\"},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(item.beReplied[0].user.nickname)+\"：\")]),_c('span',{staticClass:\"comment\"},[_vm._v(_vm._s(item.beReplied[0].content))])]):_vm._e(),_c('div',{staticClass:\"date\"},[_vm._v(_vm._s(_vm._f(\"LocaleString\")(item.time)))]),_c('span',{staticClass:\"iconfont icon-zan float-right\"},[_vm._v(_vm._s(item.likedCount))])])])}),0)]):_vm._e(),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loadingComments),expression:\"loadingComments\"}],staticClass:\"comment-wrap\"},[_c('p',{staticClass:\"title\"},[_vm._v(\" 最新评论\"),_c('span',{staticClass:\"number\"},[_vm._v(\"(\"+_vm._s(this.total)+\")\")])]),_c('div',{staticClass:\"comments-wrap\"},_vm._l((_vm.comments),function(item,index){return _c('div',{key:index,staticClass:\"item\"},[_c('div',{staticClass:\"icon-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item.user.avatarUrl),expression:\"item.user.avatarUrl\"}],attrs:{\"alt\":\"\"}})]),_c('div',{staticClass:\"content-wrap\"},[_c('div',{staticClass:\"content\"},[_c('span',{staticClass:\"name\"},[_vm._v(\" \"+_vm._s(item.user.nickname)+\" ：\")]),_c('span',{staticClass:\"comment\"},[_vm._v(_vm._s(item.content))])]),(item.beReplied[0])?_c('div',{staticClass:\"re-content\"},[_c('span',{staticClass:\"name\"},[_vm._v(_vm._s(item.beReplied[0].user.nickname)+\"：\")]),_c('span',{staticClass:\"comment\"},[_vm._v(_vm._s(item.beReplied[0].content))])]):_vm._e(),_c('div',{staticClass:\"date\"},[_vm._v(_vm._s(_vm._f(\"LocaleString\")(item.time)))])])])}),0),_c('el-pagination',{attrs:{\"hide-on-single-page\":true,\"background\":\"\",\"current-page\":_vm.page,\"page-sizes\":[5, 10, 20, 30, 50, 100],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)]),_c('div',{staticClass:\"mv-recommend\"},[_c('h3',{staticClass:\"title\"},[_vm._v(\"相关推荐\")]),_c('div',{staticClass:\"mvs\"},[_c('div',{staticClass:\"items\"},_vm._l((_vm.recommendMvs),function(item,index){return _c('div',{key:index,staticClass:\"item\",on:{\"click\":function($event){return _vm.toMvDetail(item.id)}}},[_c('div',{staticClass:\"img-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item.cover),expression:\"item.cover\"}],attrs:{\"alt\":\"\"}}),_c('span',{staticClass:\"iconfont icon-play\"}),_c('div',{staticClass:\"num-wrap\"},[_c('div',{staticClass:\"iconfont icon-play\"}),_c('div',{staticClass:\"num\"},[_vm._v(_vm._s(_vm._f(\"ellipsisPlayVolume\")(item.playCount)))])]),_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(_vm._f(\"formatDuration\")(item.duration)))])]),_c('div',{staticClass:\"info-wrap\"},[_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"singer\"},[_vm._v(_vm._s(item.artistName))])])])}),0)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"mv-container\">\r\n    <div class=\"mv-wrap\">\r\n      <h3>MV详情</h3>\r\n      <!-- mv -->\r\n      <div class=\"video-wrap\">\r\n        <!-- controls 属性规定浏览器应该为视频提供播放控件。controls 属性是一个 boolean(布尔) 属性 -->\r\n        <video controls :src =\"mvUrl\">\r\n          抱歉，您的浏览器不支持内嵌视频，不过不用担心，你可以\r\n          <a href=\"https://www.baidu.com\">下载</a>\r\n          并用你喜欢的播放器观看!\r\n        </video>\r\n      </div>\r\n\r\n      <!-- mv信息栏 -->\r\n      <div class=\"info-wrap\">\r\n        <div class=\"singer-info\">\r\n          <div class=\"avatar-wrap\">\r\n            <img v-lazy =\"artistAvatarUrl\" alt=\"\" />\r\n          </div>\r\n          <!-- 发布者名称 -->\r\n          <span class=\"name\">{{ mvInfo.artistName }}</span>\r\n        </div>\r\n        <!-- mv信息 -->\r\n        <div class=\"mv-info\">\r\n          <!-- mv名称  -->\r\n          <h2 class=\"title\">{{ mvInfo.name }}</h2>\r\n          <!-- mv发布时间 -->\r\n          <span class=\"date\">发布：{{ mvInfo.publishTime }}</span>\r\n          <!-- mv播放次数 -->\r\n          <span class=\"number\">播放：{{ mvInfo.playCount }} 次</span>\r\n          <!-- mv描述 -->\r\n          <p class=\"desc\">{{ mvInfo.desc }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 热门评论 -->\r\n      <div class=\"comment-wrap\" v-if=\"hotComments.length != 0\">\r\n        <p class=\"title\">\r\n          热门评论<span class=\"number\">({{ hotComments.length }}) </span>\r\n        </p>\r\n        <div class=\"comments-wrap\">\r\n          <div class=\"item\" v-for=\"(item, index) in hotComments\" :key=\"index\">\r\n            <div class=\"icon-wrap\">\r\n              <!-- 头像 -->\r\n              <img v-lazy =\"item.user.avatarUrl\" alt=\"\" />\r\n            </div>\r\n            <!-- 评论内容 -->\r\n            <div class=\"content-wrap\">\r\n              <!-- 内容 -->\r\n              <div class=\"content\">\r\n                <!-- 评论人的名字 -->\r\n                <span class=\"name\">{{ item.user.nickname }}：</span>\r\n                <!-- 评论 -->\r\n                <span class=\"comment\">{{ item.content }}</span>\r\n              </div>\r\n              <!-- 评论的评论 -->\r\n              <div class=\"re-content\" v-if=\"item.beReplied.length != 0\">\r\n                <!-- 名字 -->\r\n                <span class=\"name\"\r\n                  >{{ item.beReplied[0].user.nickname }}：</span\r\n                >\r\n                <!-- 回复 -->\r\n                <span class=\"comment\">{{ item.beReplied[0].content }}</span>\r\n              </div>\r\n              <!-- 评论时间 -->\r\n              <div class=\"date\">{{ item.time | LocaleString }}</div>\r\n              <!-- 点赞 -->\r\n              <span class=\"iconfont icon-zan float-right\">{{\r\n                item.likedCount\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 最新评论 -->\r\n      <div class=\"comment-wrap\" v-loading=\"loadingComments\">\r\n        <p class=\"title\">\r\n          最新评论<span class=\"number\">({{ this.total }})</span>\r\n        </p>\r\n        <div class=\"comments-wrap\">\r\n          <div\r\n            class=\"item\"\r\n            v-for=\"(item, index) in comments\"\r\n            :key=\"index\"\r\n          >\r\n            <div class=\"icon-wrap\">\r\n              <!-- 头像 -->\r\n              <img v-lazy =\"item.user.avatarUrl\" alt=\"\" />\r\n            </div>\r\n            <!-- 评论内容 -->\r\n            <div class=\"content-wrap\">\r\n              <div class=\"content\">\r\n                <span class=\"name\"> {{ item.user.nickname }} ：</span>\r\n                <span class=\"comment\">{{ item.content }}</span>\r\n              </div>\r\n              <!-- 评论的评论 -->\r\n              <div class=\"re-content\" v-if=\"item.beReplied[0]\">\r\n                <!-- 名字 -->\r\n                <span class=\"name\"\r\n                  >{{ item.beReplied[0].user.nickname }}：</span\r\n                >\r\n                <!-- 回复 -->\r\n                <span class=\"comment\">{{ item.beReplied[0].content }}</span>\r\n              </div>\r\n              <!-- 评论时间 -->\r\n              <div class=\"date\">{{ item.time | LocaleString }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- 分页 -->\r\n        <el-pagination\r\n          :hide-on-single-page=\"true\"\r\n          background\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"page\"\r\n          :page-sizes=\"[5, 10, 20, 30, 50, 100]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n        >\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 相关推荐 -->\r\n    <div class=\"mv-recommend\">\r\n      <h3 class=\"title\">相关推荐</h3>\r\n      <div class=\"mvs\">\r\n        <div class=\"items\">\r\n          <div\r\n            class=\"item\"\r\n            @click=\"toMvDetail(item.id)\"\r\n            v-for=\"(item, index) in recommendMvs\"\r\n            :key=\"index\"\r\n          >\r\n            <div class=\"img-wrap\">\r\n              <img v-lazy =\"item.cover\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n              <div class=\"num-wrap\">\r\n                <!-- 播放图标 -->\r\n                <div class=\"iconfont icon-play\"></div>\r\n                <!-- 相似mv的播放次数 -->\r\n                <div class=\"num\">{{ item.playCount | ellipsisPlayVolume }}</div>\r\n              </div>\r\n              <!-- 播放时长 -->\r\n              <span class=\"time\">{{ item.duration | formatDuration }}</span>\r\n            </div>\r\n            <div class=\"info-wrap\">\r\n              <!-- mv名字,一般是歌名 -->\r\n              <div class=\"name\">{{ item.name }}</div>\r\n              <!-- 作者名字 -->\r\n              <div class=\"singer\">{{ item.artistName }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入 axios\r\nimport { playMVAPI,commentsAPI,simiMVAPI,mvDetailAPI,artistsAPI } from '@/utils/api'\r\nexport default {\r\n  name: \"mv\",\r\n  data() {\r\n    return {\r\n      // 当前mv的id\r\n      mvId: \"\",\r\n      // mv相关信息\r\n      mvUrl: \"\",\r\n      // 相关推荐\r\n      recommendMvs: [],\r\n      // mv详情\r\n      mvInfo: {},\r\n      // 歌手头像\r\n      artistAvatarUrl: \"\",\r\n      // mv热门评论信息\r\n      hotComments: [],\r\n      // 最新评论\r\n      comments: [],\r\n      // 评论总数\r\n      total: 0,\r\n      // 页数\r\n      pageSize: 10,\r\n      page: 1,\r\n      // 评论\r\n      loading: true,\r\n      loadingComments: false,\r\n    };\r\n  },\r\n  watch: {\r\n    // 监听$route.query.q\r\n    $route(newVal) {\r\n      // console.log(newVal);\r\n      this.searchMV(newVal.query.q);\r\n    },\r\n  },\r\n  // 生命周期钩子 回调函数\r\n  created() {\r\n    // console.log(this.$route.query.q);\r\n    let mvId = this.$route.query.q;\r\n    this.mvId = mvId;\r\n    // 调用方法\r\n    this.searchMV(mvId);\r\n  },\r\n  // 方法\r\n  methods: {\r\n    // 跳转到MV页面\r\n    toMvDetail(id) {\r\n      this.$router.push(`/mv?q=${id}`);\r\n    },\r\n    // 换页\r\n    handleCurrentChange(page) {\r\n      this.page = page;\r\n      this.getComments();\r\n    },\r\n    // 获取评论\r\n    getComments() {\r\n      // 开始加载评论\r\n      this.loadingComments = true;\r\n      let params = {\r\n            id: this.$route.query.q,\r\n            limit: this.pageSize,\r\n            offset: (this.page - 1) * this.pageSize,\r\n          }\r\n      commentsAPI(params,'mv').then((res) => {\r\n          // console.log(\"获取评论\", res);\r\n          // 在res.data里面判断是否存在'hotComments'这个数组，返回一个boolen值\r\n          if (Object.prototype.hasOwnProperty.call(res.data, \"hotComments\")) {\r\n            // 如果存在↓\r\n            this.hotComments = res.data.hotComments;\r\n          }\r\n          // 赋值最新评论\r\n          this.comments = res.data.comments;\r\n          // 赋值评论总数\r\n          this.total = this.mvInfo.commentCount - this.hotComments.length;\r\n        })\r\n        .then(() => {\r\n          // 停止加载评论\r\n          this.loadingComments = false;\r\n        });\r\n    },\r\n\r\n    searchMV(id) {\r\n      // 开始加载\r\n      this.loading = true;\r\n      let params = {\r\n            // 传入mvid\r\n            id: id,\r\n          }\r\n      // 获取mv播放url\r\n        playMVAPI(params).then((res) => {\r\n          // console.log(\"MvUrl\", res);\r\n          // 赋值mvUrl\r\n          this.mvUrl = res.data.data.url;\r\n        });\r\n\r\n      // 获取相关Mv推荐,传入mvid\r\n        simiMVAPI({mvid : id}).then((res) => {\r\n          // console.log(\"相似MV\", res);\r\n          // 赋值相似mv数组\r\n          this.recommendMvs = res.data.mvs;\r\n        });\r\n\r\n      // 获取Mv信息\r\n      mvDetailAPI({mvid : id}).then((res) => {\r\n          // console.log(\"Mv详细信息\", res);\r\n          // 赋值mv信息\r\n          this.mvInfo = res.data.data;\r\n          // 获取歌手详细信息，拿到歌手头像\r\n          this.GetArtistDetail(this.mvInfo.artists[0].id);\r\n          // 获取评论信息\r\n          this.getComments()  \r\n        })\r\n        .then(()=>{\r\n          // 停止加载\r\n                this.loading = false\r\n            });    \r\n    },\r\n    // 获取歌手信息, 传入歌手 id, 可获得获取歌手详情\r\n    GetArtistDetail(id) {\r\n      artistsAPI({id},'detail').then((res) => {\r\n          // console.log(\"传入歌手 id, 可获得获取歌手详情:\", res);\r\n          // 获取歌手头像\r\n          this.artistAvatarUrl = res.data.data.artist.cover;\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import mod from \"-!../../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./07.mv.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!./07.mv.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./07.mv.vue?vue&type=template&id=4bc0863c&\"\nimport script from \"./07.mv.vue?vue&type=script&lang=js&\"\nexport * from \"./07.mv.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.10.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","mvUrl","directives","name","rawName","value","artistAvatarUrl","expression","_s","mvInfo","artistName","publishTime","playCount","desc","hotComments","length","_l","item","index","key","user","avatarUrl","nickname","content","beReplied","_e","_f","time","likedCount","loadingComments","total","comments","page","pageSize","on","handleCurrentChange","recommendMvs","$event","toMvDetail","id","cover","duration","staticRenderFns","data","mvId","loading","watch","$route","created","methods","getComments","limit","offset","commentsAPI","then","searchMV","playMVAPI","simiMVAPI","mvid","mvDetailAPI","GetArtistDetail","artistsAPI","component"],"sourceRoot":""}