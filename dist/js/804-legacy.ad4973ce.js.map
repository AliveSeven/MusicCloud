{"version":3,"file":"js/804-legacy.ad4973ce.js","mappings":"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","sources":["webpack://cloud-music/./src/components/Artists/Artists.vue?205e","webpack://cloud-music/src/components/Artists/Artists.vue","webpack://cloud-music/./src/components/Artists/Artists.vue?fb63","webpack://cloud-music/./src/components/Artists/Artists.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"artists-container\"},[_c('div',{staticClass:\"filter-wrap\"},[_c('div',{staticClass:\"wrap-container\"},[_c('div',{staticClass:\"area-wrap\"},[_c('span',{staticClass:\"area-type\"},[_vm._v(\"语种:\")]),_c('ul',{staticClass:\"areas-wrap\"},[_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == -1},on:{\"click\":function($event){_vm.area = -1}}},[_vm._v(\"全部\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == 7},on:{\"click\":function($event){_vm.area = 7}}},[_vm._v(\"华语\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == 96},on:{\"click\":function($event){_vm.area = 96}}},[_vm._v(\"欧美\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == 8},on:{\"click\":function($event){_vm.area = 8}}},[_vm._v(\"日本\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == 16},on:{\"click\":function($event){_vm.area = 16}}},[_vm._v(\"韩国\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.area == 0},on:{\"click\":function($event){_vm.area = 0}}},[_vm._v(\"其他\")])])])]),_c('div',{staticClass:\"type-wrap\"},[_c('span',{staticClass:\"types-type\"},[_vm._v(\"分类:\")]),_c('ul',{staticClass:\"types-wrap\"},[_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.type == -1},on:{\"click\":function($event){_vm.type = -1}}},[_vm._v(\"全部\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.type == 1},on:{\"click\":function($event){_vm.type = 1}}},[_vm._v(\"男歌手\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.type == 2},on:{\"click\":function($event){_vm.type = 2}}},[_vm._v(\"女歌手\")])]),_c('li',{staticClass:\"tab\"},[_c('span',{staticClass:\"title\",class:{active : _vm.type == 3},on:{\"click\":function($event){_vm.type = 3}}},[_vm._v(\"乐队组合\")])])])])])]),_c('div',{staticClass:\"artists\"},_vm._l((_vm.artistsList),function(item,index){return _c('div',{key:index,staticClass:\"artists-wrap\",on:{\"click\":function($event){return _vm.toAlbum(item.id)}}},[_c('div',{staticClass:\"img-wrap\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:(item.img1v1Url),expression:\"item.img1v1Url\"}],attrs:{\"alt\":\"\"}})]),_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(item.name))])])}),0),_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"prev, pager, next\",\"total\":_vm.total,\"current-page\":_vm.page,\"page-size\":_vm.limit,\"pager-count\":5},on:{\"current-change\":_vm.handleCurrentChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"artists-container\">\r\n        <!-- 选项过滤容器 -->\r\n        <div class=\"filter-wrap\">\r\n            <div class=\"wrap-container\">\r\n                <div class=\"area-wrap\">\r\n                    <!-- 分类切换语种 -->\r\n                    <span class=\"area-type\">语种:</span>\r\n                    <!-- 地区标签包 -->\r\n                    <ul class=\"areas-wrap\">\r\n                        <!-- 地区、语种：-1 全部 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == -1}\" @click=\"area = -1 \">全部</span>\r\n                        </li>\r\n                        <!-- 7 华语 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == 7}\" @click=\"area = 7\">华语</span>\r\n                        </li>\r\n                        <!-- 欧美 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == 96}\" @click=\" area = 96\">欧美</span>\r\n                        </li>\r\n                        <!-- 日本 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == 8}\" @click=\" area = 8\">日本</span>\r\n                        </li>\r\n                        <!-- 韩国 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == 16}\" @click=\" area = 16\">韩国</span>\r\n                        </li>\r\n                        <!-- 其他 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : area == 0}\" @click=\" area = 0\">其他</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div class=\"type-wrap\">\r\n                    <!-- 分类切换歌手类型 -->\r\n                    <span class=\"types-type\">分类:</span>\r\n                    <!-- 类型标签包 -->\r\n                    <ul class=\"types-wrap\">\r\n                        <!-- 歌手类型：-1 全部 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : type == -1}\" @click=\"type = -1 \">全部</span>\r\n                        </li>\r\n                        <!-- 歌手类型：1 男歌手 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : type == 1}\" @click=\"type = 1 \">男歌手</span>\r\n                        </li>\r\n                        <!-- 歌手类型：2 女歌手 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : type == 2}\" @click=\"type = 2 \">女歌手</span>\r\n                        </li>\r\n                        <!-- 歌手类型：3 乐队 -->\r\n                        <li class=\"tab\">\r\n                            <span class=\"title\" :class=\"{active : type == 3}\" @click=\"type = 3 \">乐队组合</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <!-- 歌手容器 -->\r\n        <div class=\"artists\">\r\n            <div class=\"artists-wrap\" v-for=\"(item, index) in artistsList\" :key=\"index\" @click=\"toAlbum(item.id)\">\r\n                <div class=\"img-wrap\">\r\n                    <img v-lazy=\"item.img1v1Url\" alt=\"\">\r\n                </div>\r\n                <div class=\"name\">{{item.name}}</div>\r\n            </div>\r\n        </div>\r\n        <!-- 分页器 -->\r\n        <el-pagination\r\n        @current-change=\"handleCurrentChange\"\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\"\r\n        :current-page=\"page\"\r\n        :page-size=\"limit\"\r\n        :pager-count=\"5\"\r\n      ></el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArtistsAPI } from '@/utils/api'\r\nexport default {\r\n    name: 'artists',\r\n    data() {\r\n        return {\r\n            // 总条数\r\n            total : 400,\r\n            // 获取结果列表\r\n            artistsList : [],\r\n            // 类型 : -1、全部 1、男歌手 2、女歌手 3、乐队\r\n            type : -1,\r\n            // 语种、地区 : -1、全部 7、华语 96、欧美 8、日本 16、韩国 0、其他\r\n            area : -1,\r\n            // 页码\r\n            page : 1,\r\n            // 获取数量\r\n            limit : 20,\r\n        }\r\n    },\r\n\r\n    watch :{\r\n        area(){\r\n            //返回第一页\r\n            this.page = 1;\r\n            // 获取数据\r\n            this.getData()\r\n        },\r\n        type(){\r\n            //返回第一页\r\n            this.page = 1;\r\n            // 获取数据\r\n            this.getData()\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.getData()\r\n    },\r\n    \r\n    methods: {\r\n        getData(){\r\n            let params = {\r\n                limit : this.limit, // 获取数量\r\n                type : this.type, // 获取类型，-1为全部\r\n                area : this.area, // 获取歌手地区，-1为全部\r\n                offset : (this.page - 1) * this.limit\r\n            }\r\n            getArtistsAPI(params).then(res =>{\r\n                // console.log('全部歌手列表',res);\r\n                // 赋值\r\n                this.artistsList = res.data.artists\r\n            })\r\n        },\r\n        handleCurrentChange(val) {\r\n            // console.log(val)\r\n            // console.log(`当前页: ${val}`)\r\n            this.page = val;\r\n            this.getData();\r\n        },\r\n        toAlbum(id){\r\n            this.$router.push(`/artist?q=${id}`)\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.artists-container{\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    margin: 35px 50px;\r\n\r\n    .filter-wrap{\r\n        .wrap-container{\r\n            &>div{\r\n                margin-bottom: 30px;\r\n                vertical-align: baseline; /* 使单元格的基线，与该行中所有以基线对齐的其它单元格的基线对齐。  */\r\n                display: flex; /* 弹性布局,横着放 */\r\n                align-items: center;\r\n\r\n                span{\r\n                    font-size: 14px;\r\n                    height: 100%;\r\n\r\n                    &.title{\r\n                        margin: 20px;\r\n                        color: gray;\r\n                        cursor: pointer;\r\n                        padding: 5px 20px;\r\n\r\n                        &.active{\r\n                            color: black;\r\n                            background-color: #fcf6f5;\r\n                            border-radius: 20px;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                ul{\r\n                    display: flex;\r\n\r\n                    /* 除了最后一个元素外,其他元素在其右边加上一条solid(实心)边框 */\r\n                    li:not(:last-child) {\r\n                        border-right: 1px solid #f2f2f1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .artists{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n\r\n        .artists-wrap{\r\n            margin: 10px 20px;\r\n\r\n            .img-wrap{\r\n                width: 200px;\r\n                position: relative;\r\n                cursor: pointer;\r\n\r\n                img{\r\n                    width: auto;\r\n                    height: auto;\r\n                    max-width: 100%;\r\n                    max-height: 100%;\r\n                    border-radius: 50%;\r\n                    box-shadow: 0 0 20px 2px rgba(0, 0, 0, .3);\r\n                }\r\n\r\n                &:hover img{\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n\r\n            .name{\r\n                text-align: center;\r\n                margin: 10px auto;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media screen and (max-width : 500px) {\r\n    .artists-container{\r\n        margin: 20px 0;\r\n    }\r\n\r\n    .artists-container .filter-wrap{\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    .artists-container .filter-wrap .wrap-container > div span.title{\r\n        margin: 7px;\r\n        padding: 2px;\r\n    }\r\n\r\n    .artists-container .artists{\r\n        justify-content: center;\r\n    }\r\n\r\n    .artists-container .artists .artists-wrap .img-wrap{\r\n        width: 120px;\r\n    }\r\n\r\n    .artists-container .artists .artists-wrap .name{\r\n        width: 100px;\r\n    }\r\n}\r\n\r\n@media screen and (max-width : 360px){\r\n    .artists-container .artists .artists-wrap .img-wrap{\r\n        width: 110px;\r\n    }\r\n}\r\n\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Artists.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Artists.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Artists.vue?vue&type=template&id=189c987d&scoped=true&\"\nimport script from \"./Artists.vue?vue&type=script&lang=js&\"\nexport * from \"./Artists.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Artists.vue?vue&type=style&index=0&id=189c987d&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"189c987d\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","class","active","area","on","$event","type","_l","item","index","key","toAlbum","id","directives","name","rawName","value","expression","attrs","_s","total","page","limit","handleCurrentChange","staticRenderFns","artistsList","watch","methods","offset","getArtistsAPI","val","component"],"sourceRoot":""}